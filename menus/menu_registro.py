import re
from utils.helpers import limpiar


def registrar_usuario():
    print("=== Registro de Usuario ===")

    # Validaci√≥n del nombre (solo letras y m√≠nimo 3 caracteres)
    while True:
        nombre = input(
            'Ingrese su nombre (escriba "SALIR" para cancelar): ').strip()
        if nombre.lower() == "salir":
            print("üö™ Registro cancelado.")
            return None  # Salimos de la funci√≥n sin devolver datos
        if re.match(r"^[A-Za-z√°√©√≠√≥√∫√º√±√Å√â√ç√ì√ö√ú√ë\s]{3,}$", nombre):
            break
        print("‚ùå Nombre inv√°lido. Debe contener solo letras y al menos 3 caracteres.")

    # Validaci√≥n del correo (formato correcto con @ y dominio)
    while True:
        correo = input("Ingrese su correo electr√≥nico: ").strip()
        if correo.lower() == "salir":
            print("üö™ Registro cancelado.")
            return None
        if re.match(r"^[\w\.-]+@[\w\.-]+\.\w{2,4}$", correo):
            break
        print("‚ùå Correo inv√°lido. Aseg√∫rate de ingresar un correo v√°lido (ej: usuario@email.com).")

    # Validaci√≥n de contrase√±a (m√≠nimo 6 caracteres y al menos un n√∫mero)
    while True:
        contrase√±a = input(
            "Ingrese su contrase√±a (m√≠nimo 6 caracteres, al menos un n√∫mero): ").strip()
        if contrase√±a.lower() == "salir":
            print("üö™ Registro cancelado.")
            return None
        if len(contrase√±a) >= 6 and re.search(r"\d", contrase√±a):
            break
        print("‚ùå Contrase√±a insegura. Debe tener al menos 6 caracteres y contener al menos un n√∫mero.")

    # Simulaci√≥n de almacenamiento del usuario
    limpiar()
    print(f"‚úÖ Usuario '{nombre}' con correo {correo} registrado con √©xito.")
    return nombre, correo, contrase√±a
